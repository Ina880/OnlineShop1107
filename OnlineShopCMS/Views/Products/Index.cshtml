@model OnlineShopCMS.Models.IndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>商品列表</h1>


<div style="margin-bottom:8px;">
    <div class="row">
        <div class="row col-10 justify-content-end">
            <form asp-action="Index" class="col-4 ">
                <div class="input-group input-group-sm ">
                    <input class="form-control" type="text" placeholder="Name" name="searchString" />
                    <input class="btn btn-sm btn-primary" type="submit" value="Search" />
                </div>
            </form>
        </div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                        @Html.DisplayNameFor(model => model.Data.FirstOrDefault().Name)@*FirstOrDefault為什麼是陣列*@
            </th>
            <th>
                        @Html.DisplayNameFor(model => model.Data.FirstOrDefault().Price)
            </th>
            <th>
                        @Html.DisplayNameFor(model => model.Data.FirstOrDefault().Category)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Data) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>    
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
             </td>
                <td>
                    @if (item.Stock > 0)
                    {
                        @Html.Raw("<span class=" + "\" badge bg-success text-white \"" + ">在庫中</span>")
                    }
                    else
                    {
                        @Html.Raw("<span class=" + "\" badge bg-warning text-dark \"" + ">缺貨中</span>")
                    }
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
        @{
            var prevDisabled = !Model.PageInfo.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.PageInfo.HasNextPage ? "disabled" : "";
        }

        <div class="d-flex justify-content-center">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageInfo.PageIndex - 1)"
         
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageInfo.PageIndex + 1)"
             
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
